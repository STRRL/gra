// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: grad/v1/runner_service.proto

package gradv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RunnerStatus represents the status of a runner
type RunnerStatus int32

const (
	RunnerStatus_RUNNER_STATUS_UNSPECIFIED RunnerStatus = 0
	RunnerStatus_RUNNER_STATUS_CREATING    RunnerStatus = 1
	RunnerStatus_RUNNER_STATUS_RUNNING     RunnerStatus = 2
	RunnerStatus_RUNNER_STATUS_STOPPING    RunnerStatus = 3
	RunnerStatus_RUNNER_STATUS_STOPPED     RunnerStatus = 4
	RunnerStatus_RUNNER_STATUS_ERROR       RunnerStatus = 5
)

// Enum value maps for RunnerStatus.
var (
	RunnerStatus_name = map[int32]string{
		0: "RUNNER_STATUS_UNSPECIFIED",
		1: "RUNNER_STATUS_CREATING",
		2: "RUNNER_STATUS_RUNNING",
		3: "RUNNER_STATUS_STOPPING",
		4: "RUNNER_STATUS_STOPPED",
		5: "RUNNER_STATUS_ERROR",
	}
	RunnerStatus_value = map[string]int32{
		"RUNNER_STATUS_UNSPECIFIED": 0,
		"RUNNER_STATUS_CREATING":    1,
		"RUNNER_STATUS_RUNNING":     2,
		"RUNNER_STATUS_STOPPING":    3,
		"RUNNER_STATUS_STOPPED":     4,
		"RUNNER_STATUS_ERROR":       5,
	}
)

func (x RunnerStatus) Enum() *RunnerStatus {
	p := new(RunnerStatus)
	*p = x
	return p
}

func (x RunnerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_grad_v1_runner_service_proto_enumTypes[0].Descriptor()
}

func (RunnerStatus) Type() protoreflect.EnumType {
	return &file_grad_v1_runner_service_proto_enumTypes[0]
}

func (x RunnerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnerStatus.Descriptor instead.
func (RunnerStatus) EnumDescriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{0}
}

// CreateRunnerRequest defines the request to create a new runner
type CreateRunnerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the runner (optional, will be auto-generated if not provided)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Environment variables to set in the runner
	Env           map[string]string `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRunnerRequest) Reset() {
	*x = CreateRunnerRequest{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRunnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunnerRequest) ProtoMessage() {}

func (x *CreateRunnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunnerRequest.ProtoReflect.Descriptor instead.
func (*CreateRunnerRequest) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRunnerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRunnerRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

// CreateRunnerResponse defines the response after creating a runner
type CreateRunnerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created runner details
	Runner        *Runner `protobuf:"bytes,1,opt,name=runner,proto3" json:"runner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRunnerResponse) Reset() {
	*x = CreateRunnerResponse{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRunnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunnerResponse) ProtoMessage() {}

func (x *CreateRunnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunnerResponse.ProtoReflect.Descriptor instead.
func (*CreateRunnerResponse) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRunnerResponse) GetRunner() *Runner {
	if x != nil {
		return x.Runner
	}
	return nil
}

// DeleteRunnerRequest defines the request to delete a runner
type DeleteRunnerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the runner to delete
	RunnerId      string `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRunnerRequest) Reset() {
	*x = DeleteRunnerRequest{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRunnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRunnerRequest) ProtoMessage() {}

func (x *DeleteRunnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRunnerRequest.ProtoReflect.Descriptor instead.
func (*DeleteRunnerRequest) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRunnerRequest) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

// DeleteRunnerResponse defines the response after deleting a runner
type DeleteRunnerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success message
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRunnerResponse) Reset() {
	*x = DeleteRunnerResponse{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRunnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRunnerResponse) ProtoMessage() {}

func (x *DeleteRunnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRunnerResponse.ProtoReflect.Descriptor instead.
func (*DeleteRunnerResponse) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRunnerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListRunnersRequest defines the request to list runners
type ListRunnersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional filter by status
	Status RunnerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=grad.v1.RunnerStatus" json:"status,omitempty"`
	// Pagination limit
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Pagination offset
	Offset        int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunnersRequest) Reset() {
	*x = ListRunnersRequest{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunnersRequest) ProtoMessage() {}

func (x *ListRunnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunnersRequest.ProtoReflect.Descriptor instead.
func (*ListRunnersRequest) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRunnersRequest) GetStatus() RunnerStatus {
	if x != nil {
		return x.Status
	}
	return RunnerStatus_RUNNER_STATUS_UNSPECIFIED
}

func (x *ListRunnersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRunnersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// ListRunnersResponse defines the response containing runner list
type ListRunnersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of runners
	Runners []*Runner `protobuf:"bytes,1,rep,name=runners,proto3" json:"runners,omitempty"`
	// Total count of runners (for pagination)
	Total         int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunnersResponse) Reset() {
	*x = ListRunnersResponse{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunnersResponse) ProtoMessage() {}

func (x *ListRunnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunnersResponse.ProtoReflect.Descriptor instead.
func (*ListRunnersResponse) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListRunnersResponse) GetRunners() []*Runner {
	if x != nil {
		return x.Runners
	}
	return nil
}

func (x *ListRunnersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// ExecuteCodeRequest defines the request to execute code
type ExecuteCodeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the runner to execute code in
	RunnerId string `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	// Code to execute
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// Language/runtime for the code
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	// Timeout for execution (in seconds)
	Timeout int32 `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Working directory for execution
	WorkingDir    string `protobuf:"bytes,5,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteCodeRequest) Reset() {
	*x = ExecuteCodeRequest{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCodeRequest) ProtoMessage() {}

func (x *ExecuteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCodeRequest.ProtoReflect.Descriptor instead.
func (*ExecuteCodeRequest) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteCodeRequest) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

func (x *ExecuteCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExecuteCodeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ExecuteCodeRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ExecuteCodeRequest) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

// ExecuteCodeResponse defines the response after code execution
type ExecuteCodeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Execution output (stdout)
	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Error output (stderr)
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Exit code of the execution
	ExitCode int32 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Execution duration (in milliseconds)
	DurationMs    int64 `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteCodeResponse) Reset() {
	*x = ExecuteCodeResponse{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCodeResponse) ProtoMessage() {}

func (x *ExecuteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCodeResponse.ProtoReflect.Descriptor instead.
func (*ExecuteCodeResponse) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteCodeResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *ExecuteCodeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExecuteCodeResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ExecuteCodeResponse) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// GetRunnerRequest defines the request to get runner details
type GetRunnerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the runner to retrieve
	RunnerId      string `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunnerRequest) Reset() {
	*x = GetRunnerRequest{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunnerRequest) ProtoMessage() {}

func (x *GetRunnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunnerRequest.ProtoReflect.Descriptor instead.
func (*GetRunnerRequest) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRunnerRequest) GetRunnerId() string {
	if x != nil {
		return x.RunnerId
	}
	return ""
}

// GetRunnerResponse defines the response containing runner details
type GetRunnerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The runner details
	Runner        *Runner `protobuf:"bytes,1,opt,name=runner,proto3" json:"runner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunnerResponse) Reset() {
	*x = GetRunnerResponse{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunnerResponse) ProtoMessage() {}

func (x *GetRunnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunnerResponse.ProtoReflect.Descriptor instead.
func (*GetRunnerResponse) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetRunnerResponse) GetRunner() *Runner {
	if x != nil {
		return x.Runner
	}
	return nil
}

// Runner represents a runner instance
type Runner struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the runner
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the runner
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Current status of the runner
	Status RunnerStatus `protobuf:"varint,3,opt,name=status,proto3,enum=grad.v1.RunnerStatus" json:"status,omitempty"`
	// Resource requirements/allocation
	Resources *ResourceRequirements `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	// Creation timestamp
	CreatedAt int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last updated timestamp
	UpdatedAt int64 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// SSH connection details
	Ssh *SSHDetails `protobuf:"bytes,7,opt,name=ssh,proto3" json:"ssh,omitempty"`
	// Runner's IP address
	IpAddress string `protobuf:"bytes,8,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Environment variables
	Env           map[string]string `protobuf:"bytes,9,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runner) Reset() {
	*x = Runner{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runner) ProtoMessage() {}

func (x *Runner) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runner.ProtoReflect.Descriptor instead.
func (*Runner) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{10}
}

func (x *Runner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Runner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Runner) GetStatus() RunnerStatus {
	if x != nil {
		return x.Status
	}
	return RunnerStatus_RUNNER_STATUS_UNSPECIFIED
}

func (x *Runner) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Runner) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Runner) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Runner) GetSsh() *SSHDetails {
	if x != nil {
		return x.Ssh
	}
	return nil
}

func (x *Runner) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Runner) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

// ResourceRequirements defines resource allocation for a runner
type ResourceRequirements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU allocation (in millicores, e.g., 1000 = 1 CPU)
	CpuMillicores int32 `protobuf:"varint,1,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"`
	// Memory allocation (in MB)
	MemoryMb int32 `protobuf:"varint,2,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	// Storage allocation (in GB)
	StorageGb     int32 `protobuf:"varint,3,opt,name=storage_gb,json=storageGb,proto3" json:"storage_gb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceRequirements) GetCpuMillicores() int32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryMb() int32 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceRequirements) GetStorageGb() int32 {
	if x != nil {
		return x.StorageGb
	}
	return 0
}

// SSHDetails contains SSH connection information
type SSHDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SSH host
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// SSH port
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// SSH username
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// SSH public key (for connection)
	PublicKey     string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSHDetails) Reset() {
	*x = SSHDetails{}
	mi := &file_grad_v1_runner_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHDetails) ProtoMessage() {}

func (x *SSHDetails) ProtoReflect() protoreflect.Message {
	mi := &file_grad_v1_runner_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHDetails.ProtoReflect.Descriptor instead.
func (*SSHDetails) Descriptor() ([]byte, []int) {
	return file_grad_v1_runner_service_proto_rawDescGZIP(), []int{12}
}

func (x *SSHDetails) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SSHDetails) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SSHDetails) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SSHDetails) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

var File_grad_v1_runner_service_proto protoreflect.FileDescriptor

const file_grad_v1_runner_service_proto_rawDesc = "" +
	"\n" +
	"\x1cgrad/v1/runner_service.proto\x12\agrad.v1\"\x9a\x01\n" +
	"\x13CreateRunnerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\x03env\x18\x02 \x03(\v2%.grad.v1.CreateRunnerRequest.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\x14CreateRunnerResponse\x12'\n" +
	"\x06runner\x18\x01 \x01(\v2\x0f.grad.v1.RunnerR\x06runner\"2\n" +
	"\x13DeleteRunnerRequest\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\"0\n" +
	"\x14DeleteRunnerResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"q\n" +
	"\x12ListRunnersRequest\x12-\n" +
	"\x06status\x18\x01 \x01(\x0e2\x15.grad.v1.RunnerStatusR\x06status\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"V\n" +
	"\x13ListRunnersResponse\x12)\n" +
	"\arunners\x18\x01 \x03(\v2\x0f.grad.v1.RunnerR\arunners\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x9c\x01\n" +
	"\x12ExecuteCodeRequest\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\x05R\atimeout\x12\x1f\n" +
	"\vworking_dir\x18\x05 \x01(\tR\n" +
	"workingDir\"\x81\x01\n" +
	"\x13ExecuteCodeResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"/\n" +
	"\x10GetRunnerRequest\x12\x1b\n" +
	"\trunner_id\x18\x01 \x01(\tR\brunnerId\"<\n" +
	"\x11GetRunnerResponse\x12'\n" +
	"\x06runner\x18\x01 \x01(\v2\x0f.grad.v1.RunnerR\x06runner\"\x80\x03\n" +
	"\x06Runner\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.grad.v1.RunnerStatusR\x06status\x12;\n" +
	"\tresources\x18\x04 \x01(\v2\x1d.grad.v1.ResourceRequirementsR\tresources\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03R\tupdatedAt\x12%\n" +
	"\x03ssh\x18\a \x01(\v2\x13.grad.v1.SSHDetailsR\x03ssh\x12\x1d\n" +
	"\n" +
	"ip_address\x18\b \x01(\tR\tipAddress\x12*\n" +
	"\x03env\x18\t \x03(\v2\x18.grad.v1.Runner.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"y\n" +
	"\x14ResourceRequirements\x12%\n" +
	"\x0ecpu_millicores\x18\x01 \x01(\x05R\rcpuMillicores\x12\x1b\n" +
	"\tmemory_mb\x18\x02 \x01(\x05R\bmemoryMb\x12\x1d\n" +
	"\n" +
	"storage_gb\x18\x03 \x01(\x05R\tstorageGb\"o\n" +
	"\n" +
	"SSHDetails\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\tR\tpublicKey*\xb4\x01\n" +
	"\fRunnerStatus\x12\x1d\n" +
	"\x19RUNNER_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RUNNER_STATUS_CREATING\x10\x01\x12\x19\n" +
	"\x15RUNNER_STATUS_RUNNING\x10\x02\x12\x1a\n" +
	"\x16RUNNER_STATUS_STOPPING\x10\x03\x12\x19\n" +
	"\x15RUNNER_STATUS_STOPPED\x10\x04\x12\x17\n" +
	"\x13RUNNER_STATUS_ERROR\x10\x052\x81\x03\n" +
	"\rRunnerService\x12K\n" +
	"\fCreateRunner\x12\x1c.grad.v1.CreateRunnerRequest\x1a\x1d.grad.v1.CreateRunnerResponse\x12K\n" +
	"\fDeleteRunner\x12\x1c.grad.v1.DeleteRunnerRequest\x1a\x1d.grad.v1.DeleteRunnerResponse\x12H\n" +
	"\vListRunners\x12\x1b.grad.v1.ListRunnersRequest\x1a\x1c.grad.v1.ListRunnersResponse\x12H\n" +
	"\vExecuteCode\x12\x1b.grad.v1.ExecuteCodeRequest\x1a\x1c.grad.v1.ExecuteCodeResponse\x12B\n" +
	"\tGetRunner\x12\x19.grad.v1.GetRunnerRequest\x1a\x1a.grad.v1.GetRunnerResponseB\x87\x01\n" +
	"\vcom.grad.v1B\x12RunnerServiceProtoP\x01Z'github.com/strrl/gra/gen/grad/v1;gradv1\xa2\x02\x03GXX\xaa\x02\aGrad.V1\xca\x02\aGrad\\V1\xe2\x02\x13Grad\\V1\\GPBMetadata\xea\x02\bGrad::V1b\x06proto3"

var (
	file_grad_v1_runner_service_proto_rawDescOnce sync.Once
	file_grad_v1_runner_service_proto_rawDescData []byte
)

func file_grad_v1_runner_service_proto_rawDescGZIP() []byte {
	file_grad_v1_runner_service_proto_rawDescOnce.Do(func() {
		file_grad_v1_runner_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grad_v1_runner_service_proto_rawDesc), len(file_grad_v1_runner_service_proto_rawDesc)))
	})
	return file_grad_v1_runner_service_proto_rawDescData
}

var file_grad_v1_runner_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grad_v1_runner_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_grad_v1_runner_service_proto_goTypes = []any{
	(RunnerStatus)(0),            // 0: grad.v1.RunnerStatus
	(*CreateRunnerRequest)(nil),  // 1: grad.v1.CreateRunnerRequest
	(*CreateRunnerResponse)(nil), // 2: grad.v1.CreateRunnerResponse
	(*DeleteRunnerRequest)(nil),  // 3: grad.v1.DeleteRunnerRequest
	(*DeleteRunnerResponse)(nil), // 4: grad.v1.DeleteRunnerResponse
	(*ListRunnersRequest)(nil),   // 5: grad.v1.ListRunnersRequest
	(*ListRunnersResponse)(nil),  // 6: grad.v1.ListRunnersResponse
	(*ExecuteCodeRequest)(nil),   // 7: grad.v1.ExecuteCodeRequest
	(*ExecuteCodeResponse)(nil),  // 8: grad.v1.ExecuteCodeResponse
	(*GetRunnerRequest)(nil),     // 9: grad.v1.GetRunnerRequest
	(*GetRunnerResponse)(nil),    // 10: grad.v1.GetRunnerResponse
	(*Runner)(nil),               // 11: grad.v1.Runner
	(*ResourceRequirements)(nil), // 12: grad.v1.ResourceRequirements
	(*SSHDetails)(nil),           // 13: grad.v1.SSHDetails
	nil,                          // 14: grad.v1.CreateRunnerRequest.EnvEntry
	nil,                          // 15: grad.v1.Runner.EnvEntry
}
var file_grad_v1_runner_service_proto_depIdxs = []int32{
	14, // 0: grad.v1.CreateRunnerRequest.env:type_name -> grad.v1.CreateRunnerRequest.EnvEntry
	11, // 1: grad.v1.CreateRunnerResponse.runner:type_name -> grad.v1.Runner
	0,  // 2: grad.v1.ListRunnersRequest.status:type_name -> grad.v1.RunnerStatus
	11, // 3: grad.v1.ListRunnersResponse.runners:type_name -> grad.v1.Runner
	11, // 4: grad.v1.GetRunnerResponse.runner:type_name -> grad.v1.Runner
	0,  // 5: grad.v1.Runner.status:type_name -> grad.v1.RunnerStatus
	12, // 6: grad.v1.Runner.resources:type_name -> grad.v1.ResourceRequirements
	13, // 7: grad.v1.Runner.ssh:type_name -> grad.v1.SSHDetails
	15, // 8: grad.v1.Runner.env:type_name -> grad.v1.Runner.EnvEntry
	1,  // 9: grad.v1.RunnerService.CreateRunner:input_type -> grad.v1.CreateRunnerRequest
	3,  // 10: grad.v1.RunnerService.DeleteRunner:input_type -> grad.v1.DeleteRunnerRequest
	5,  // 11: grad.v1.RunnerService.ListRunners:input_type -> grad.v1.ListRunnersRequest
	7,  // 12: grad.v1.RunnerService.ExecuteCode:input_type -> grad.v1.ExecuteCodeRequest
	9,  // 13: grad.v1.RunnerService.GetRunner:input_type -> grad.v1.GetRunnerRequest
	2,  // 14: grad.v1.RunnerService.CreateRunner:output_type -> grad.v1.CreateRunnerResponse
	4,  // 15: grad.v1.RunnerService.DeleteRunner:output_type -> grad.v1.DeleteRunnerResponse
	6,  // 16: grad.v1.RunnerService.ListRunners:output_type -> grad.v1.ListRunnersResponse
	8,  // 17: grad.v1.RunnerService.ExecuteCode:output_type -> grad.v1.ExecuteCodeResponse
	10, // 18: grad.v1.RunnerService.GetRunner:output_type -> grad.v1.GetRunnerResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_grad_v1_runner_service_proto_init() }
func file_grad_v1_runner_service_proto_init() {
	if File_grad_v1_runner_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grad_v1_runner_service_proto_rawDesc), len(file_grad_v1_runner_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grad_v1_runner_service_proto_goTypes,
		DependencyIndexes: file_grad_v1_runner_service_proto_depIdxs,
		EnumInfos:         file_grad_v1_runner_service_proto_enumTypes,
		MessageInfos:      file_grad_v1_runner_service_proto_msgTypes,
	}.Build()
	File_grad_v1_runner_service_proto = out.File
	file_grad_v1_runner_service_proto_goTypes = nil
	file_grad_v1_runner_service_proto_depIdxs = nil
}
